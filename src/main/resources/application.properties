spring.application.name=fatcat


# Aiven MySQL 연결
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://fatcat-db-fatcat.f.aivencloud.com:27914/defaultdb?sslMode=REQUIRED&useUnicode=true&serverTimezone=Asia/Seoul

# 나중에 CA 검증 켜고 싶다면
#spring.datasource.url=jdbc:mysql://fatcat-db-fatcat.f.aivencloud.com:27914/defaultdb?sslMode=VERIFY_CA&sslCa=/Users/ujin/workspace/SpringBoot/fatcat/certs/aiven-ca.pem&useUnicode=true&serverTimezone=Asia/Seoul

spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA 설�  update  validate
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# 개발할때 캐시 꺼두기
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# --- (중요) 아래 두 줄은 주석/삭제: 검증 모드 사용 안 함 ---
# spring.datasource.hikari.data-source-properties.sslMode=VERIFY_CA
# spring.datasource.hikari.data-source-properties.sslCa=${DB_SSL_CA}

# Hibernate naming strategy: camelCase → snake_case 자동 변환
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# file upload
#file.upload.dir=c:/fatcat-uploads/
file.upload.dir=/fatcat

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB

# =====================
# 🔹 Google OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=1033996329713-jnmbh40ajsb9r2dim60l76q867ss9ate.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=email,profile


# =====================
# Kakao OAuth2
# =====================
spring.security.oauth2.client.registration.kakao.client-id=6346d3068b0124da4406729947ae65f1
spring.security.oauth2.client.registration.kakao.client-secret=
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
